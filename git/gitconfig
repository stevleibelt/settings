[user]
    name    = stevleibelt
    email   = stev@leibelt.de

[color]
    ui          = auto
    diff        = auto
    status      = auto
    branch      = auto
    interactive = auto

[color "branch"]
    current = yellow
    local   = green
    remote  = red

[color "diff"]
    mega    = yellow bold
    frag    = magenta bold
    old     = red bold
    new     = green bold

[color "status"]
    added       = yellow
    changed     = green
    untracked   = red

[core]
    exludesfiles    = ~/.gitignore.global
    whitespaces     = trailing-space, space-before-tab
    pager           = less -RSX
    edit            = vim
    #safecrlf       = true
    #autocrlf       = false

[grep]
    extendedRegexp  = true

[log]
    #abbrevCommit   = true

[merge]
    conflictStyle   = diff3

[mergetool]
    #keepBackup      = false
    #keepTemporaries = false
    #prompt          = false

[apply]
    #whitespace  = fix

[push]
    # 'nothing' : do not push anything
    # 'matching': push all matching branches (default)
    # 'upstream' : push current branch to whereever it is pointing
    # 'current' : push current branch
    #default = upstream

[pull]
    # be careful here
    # do not pull --no-rebase over a local line containing a true merge
    #rebase = true

[alias]
    tagDates    = git log --tags --simplify-by-decoration --pretty="format:%ai %d"

    #log
    log-history = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --date-order
    log-local   = !git oneline ORIG_HEAD.. --stat --no-merges
    log-oneline = log --pretty=oneline --abbrev-commit --graph

    #diff
    changes     = diff --name-status
    diff-cached = diff --cached
    diff-status = diff --stat

    #cancel
    amend   = commit --amend
    unadd   = reset HEAD --
    undo    = reset --soft HEAD^
    unstage = reset HEAD --

    #info
    track   = "!f() { ([ $# -eq 2 ] && ( echo \"Setting tracking for branch \" $1 \" -> \" $2;git branch --set-upstream $1 $2; ) || ( git for-each-ref --format=\"local: %(refname:short) <--sync--> remote: %(upstream:short)\" refs/heads && echo --Remotes && git remote -v)); }; f"
    ll      = "!f() { git lg origin/master..$1; }; f"
    dd    = "!f() { git df origin/master...$1; }; f"

    #branch
    branch-new-from-master      = checkout --no-track origin/master -b
    branch-clean-merged         = !git branch --merged master | grep -v 'master$' | xargs git branch -d && git remote prune origin
    branch-serve-local          = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
    branch-list-branches        = branch -avv
    branch-list-remote-branches = ls-remote --heads origin

    #files
    add-all         = add -A
    add-modified    = !git-ls-files -m -z | xargs -0 git-add && git status
    add-new         = !git-ls-files -o --exclude-standard -z | xargs -0 git-add && git status
    delete-marked   = !git ls-files -d -z | xargs -0 git-rm && git status

    #unknown :->
    lint = ! git status --porcelain | /bin/grep -e '^.\\(M\\|?\\).*\\.php$' | awk '{print $2}' | xargs -L 1 php -l

    #stash
    unstash = stash pop

    #push
    push-to-master  = git push -u origin maste

# links | sources
# * https://github.com/MattKetmo/dotfiles/blob/master/git/gitconfig
